/*----------------------------*/
/*<!---- @nkmjs/ui-core ----!>*/
/*----------------------------*/

@import '../_constants';
@import '../_variables';
@import '../_functions';
@import '../_mixins';

/* Base CSS for all buttons */

$btnBorderRadius: 3px;

:host{

    transition: background-color 0.15s ease;
    
    display: flex;
    flex-direction: row;
    align-items: center;
    align-content: center;
    justify-content: center;

    padding: 2px;

    border-radius: $btnBorderRadius;

    background-color:rgba(0,0,0,0.5);
    border: none;

    --flavor-color: rgba(0,0,0,0.1);

    --flavor-primary-disabled:rgba(0,0,0,0.1);
    --flavor-secondary-disabled:rgba(0,0,0,0.1);
    --flavor-contrast-disabled:rgba(127,127,127,0.5);

    @include state-color-variations( rgba(50,50,50,0.65), rgba(140,140,140,0.5), 0.65, 1) 
    using ( $index, $st, $p, $s, $c){
        #{'--flavor-primary-'+$st}: $p;
        #{'--flavor-secondary-'+$st}: $s;
        #{'--flavor-contrast-'+$st}: $c;
    }

    &::after{
        transition: all 0.15s ease;
        background-color: var(--flavor-secondary-focused);
    }

}

:host(.inline){    
    border-radius: 0;
}

:host(.inline:first-child){
    border-radius: $btnBorderRadius 0 0 $btnBorderRadius;
}

:host(.inline:last-child){
    border-radius: 0 $btnBorderRadius $btnBorderRadius 0;
}

:host(.inline:only-child){
    border-radius: $btnBorderRadius;
}

// ----> States

:host(#{$IDLE}){
    //opacity:1;
    background-color: var(--flavor-primary-idle);
    border-color: var(--flavor-secondary-idle);

    & .label{
        color: var(--flavor-contrast-idle);
    }
}

$th: 2px;

:host(#{$FOCUSED}){

    @include box-shadow( 2px, 0px, 3px, -1px, rgba(0,0,0,0.5));

    background-color: var(--flavor-primary-focused);
    border-color: var(--flavor-secondary-focused);

    & .label{
        color: var(--flavor-contrast-focused);
    }

}

:host(#{$SELECTED}){

    background-color: var(--flavor-primary-selected);
    border-color: var(--flavor-secondary-selected);

    & .label{
        color: var(--flavor-contrast-selected);
    }

}

:host(#{$SELECTED+$FOCUSED}){

    background-color: var(--flavor-primary-selected-focused);
    border-color: var(--flavor-secondary-selected-focused);

    & .label{
        color: var(--flavor-contrast-selected-focused);
    }

}

// ----> Toggled state :: after
// visual marker
:host(#{$TOGGLABLE}#{$FOCUSED})::after,
:host(#{$TOGGLABLE}#{$TOGGLED})::after{
    content:"";
    position: absolute;
    width: $th;
    height:$th;
    border-radius: 10px;

    top: auto;
    bottom: -$th*0.5; // Default state ~= top
}

:host(#{$TOGGLED}){
    //backdrop-filter:brightness(0.65);
    background-color: var(--flavor-primary-toggled);
    //border-color: var(--flavor-secondary-toggled);
    border-color: var(--flavor-color);

    & .label{
        color: var(--flavor-contrast-toggled);
    }
}

// ----> Horizontal placement
// [  .  ][  '  ]

:host(#{$TOGGLABLE}#{$TOP})::after{
    top: auto;
    bottom: -$th*0.5;
}

:host(#{$TOGGLABLE}#{$BOTTOM})::after{
    top: -$th*0.5;
    bottom: auto;
}

:host(#{$TOGGLABLE}#{$FOCUSED})::after,
:host(#{$TOGGLABLE}#{$FOCUSED}#{$TOP})::after,
:host(#{$TOGGLABLE}#{$FOCUSED}#{$BOTTOM})::after{
    left:calc(50% - #{$th*0.5});
}

:host(#{$TOGGLABLE}#{$TOGGLED})::after,
:host(#{$TOGGLABLE}#{$TOGGLED}#{$TOP})::after, 
:host(#{$TOGGLABLE}#{$TOGGLED}#{$BOTTOM})::after{
    left:3px;
    width: calc(100% - 6px);
}


// ----> Vertical placement

:host(#{$TOGGLABLE}#{$LEFT})::after{
    left:auto;
    right: -$th*0.5;
}

:host(#{$TOGGLABLE}#{$RIGHT})::after{
    left: -$th*0.5;
    right:auto;
}

:host(#{$TOGGLABLE}#{$FOCUSED}#{$LEFT})::after,
:host(#{$TOGGLABLE}#{$FOCUSED}#{$RIGHT})::after{
    bottom:calc(50% - #{$th*0.5});
}

:host(#{$TOGGLABLE}#{$TOGGLED}#{$LEFT})::after, 
:host(#{$TOGGLABLE}#{$TOGGLED}#{$RIGHT})::after{
    bottom:3px;
    width: $th;
    height: calc(100% - 6px);
}

/*
:host(#{$SIZE_XS+$TOGGLED})::after, 
:host(#{$SIZE_S+$TOGGLED})::after{
    height:2px;
    bottom: -1px;
}
*/
/* Base state : DISABLED */

:host(#{$DISABLED}){

    background-color: var(--flavor-primary-disabled);
    border-color: var(--flavor-secondary-disabled);

    & .label{
        color: var(--flavor-contrast-disabled);
    }
}

/* Variants */

:host(#{$FRAME}){
    background-color: transparent;
    border-width: 1px;
    border-style: solid;
}

:host(#{$MINIMAL}){
    background-color: transparent;
    border:none;
}

// ----> RIPPLE

$pad: 0px;
$pad2: $pad * 2;

.ripple-wrapper{
    pointer-events: none;
    position: absolute;
    top:-#{$pad};
    left:-#{$pad};
    width: calc(100% + #{$pad2});
    height: calc(100% + #{$pad2});
    border-radius: inherit;
    overflow: hidden;
    opacity: 0.5;
}

.ripple-wrapper .ripple {
    pointer-events: none;
    position: absolute;
    border-radius: 50%;
    opacity: 1;
    transform: scale(0);
    animation: ripple 1200ms linear;
    //background-color: transparent;
    //background-color: #fff;
    background-color: var(--flavor-secondary-focused);
    //background: radial-gradient(var(--flavor-secondary-focused), rgba(0,0,0,0));

    @keyframes ripple {
        to {
            transform: scale(4);
            opacity: 0;
        }
    }

}

